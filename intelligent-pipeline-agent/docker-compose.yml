
version: "3.9"
services:
  api:
    build: { context: ., dockerfile: docker/Dockerfile.api }
    env_file: .env
    depends_on: [postgres, redis, weaviate, mlflow]
    ports: ["8000:8000"]

  frontend:
    build: { context: ., dockerfile: docker/Dockerfile.frontend }
    env_file: .env
    depends_on: [api]
    ports: ["8501:8501"]

  worker:
    build: { context: ., dockerfile: docker/Dockerfile.worker }
    env_file: .env
    depends_on: [api, postgres, redis]

  nginx:
    image: nginx:1.27-alpine
    volumes: [ "./docker/nginx.conf:/etc/nginx/nginx.conf:ro" ]
    ports: ["80:80"]
    depends_on: [api]

  weaviate:
    image: semitechnologies/weaviate:1.24.12
    ports: ["8080:8080"]
    environment:
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      CLUSTER_HOSTNAME: "node1"

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes: [ "pgdata:/var/lib/postgresql/data" ]

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.15.1
    command: ["mlflow","server","--host","0.0.0.0","--port","5000","--backend-store-uri","sqlite:///mlflow.db","--default-artifact-root","/mlflow"]
    ports: ["5000:5000"]
    volumes: [ "mlflow_artifacts:/mlflow" ]

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes: [ "./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro" ]
    ports: ["9090:9090"]
    depends_on: [api]

  grafana:
    image: grafana/grafana:11.2.0
    ports: ["3000:3000"]
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

volumes:
  pgdata:
  mlflow_artifacts:
